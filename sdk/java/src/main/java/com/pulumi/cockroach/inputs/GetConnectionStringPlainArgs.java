// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cockroach.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetConnectionStringPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetConnectionStringPlainArgs Empty = new GetConnectionStringPlainArgs();

    @Import(name="database")
    private @Nullable String database;

    public Optional<String> database() {
        return Optional.ofNullable(this.database);
    }

    @Import(name="id", required=true)
    private String id;

    public String id() {
        return this.id;
    }

    @Import(name="os")
    private @Nullable String os;

    public Optional<String> os() {
        return Optional.ofNullable(this.os);
    }

    @Import(name="password")
    private @Nullable String password;

    public Optional<String> password() {
        return Optional.ofNullable(this.password);
    }

    @Import(name="sqlUser")
    private @Nullable String sqlUser;

    public Optional<String> sqlUser() {
        return Optional.ofNullable(this.sqlUser);
    }

    private GetConnectionStringPlainArgs() {}

    private GetConnectionStringPlainArgs(GetConnectionStringPlainArgs $) {
        this.database = $.database;
        this.id = $.id;
        this.os = $.os;
        this.password = $.password;
        this.sqlUser = $.sqlUser;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetConnectionStringPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetConnectionStringPlainArgs $;

        public Builder() {
            $ = new GetConnectionStringPlainArgs();
        }

        public Builder(GetConnectionStringPlainArgs defaults) {
            $ = new GetConnectionStringPlainArgs(Objects.requireNonNull(defaults));
        }

        public Builder database(@Nullable String database) {
            $.database = database;
            return this;
        }

        public Builder id(String id) {
            $.id = id;
            return this;
        }

        public Builder os(@Nullable String os) {
            $.os = os;
            return this;
        }

        public Builder password(@Nullable String password) {
            $.password = password;
            return this;
        }

        public Builder sqlUser(@Nullable String sqlUser) {
            $.sqlUser = sqlUser;
            return this;
        }

        public GetConnectionStringPlainArgs build() {
            $.id = Objects.requireNonNull($.id, "expected parameter 'id' to be non-null");
            return $;
        }
    }

}
