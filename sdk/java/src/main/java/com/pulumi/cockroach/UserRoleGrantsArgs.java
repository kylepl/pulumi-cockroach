// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cockroach;

import com.pulumi.cockroach.inputs.UserRoleGrantsRoleArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;


public final class UserRoleGrantsArgs extends com.pulumi.resources.ResourceArgs {

    public static final UserRoleGrantsArgs Empty = new UserRoleGrantsArgs();

    @Import(name="roles", required=true)
    private Output<List<UserRoleGrantsRoleArgs>> roles;

    public Output<List<UserRoleGrantsRoleArgs>> roles() {
        return this.roles;
    }

    /**
     * ID of the user to grant these roles to.
     * 
     */
    @Import(name="userId", required=true)
    private Output<String> userId;

    /**
     * @return ID of the user to grant these roles to.
     * 
     */
    public Output<String> userId() {
        return this.userId;
    }

    private UserRoleGrantsArgs() {}

    private UserRoleGrantsArgs(UserRoleGrantsArgs $) {
        this.roles = $.roles;
        this.userId = $.userId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(UserRoleGrantsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private UserRoleGrantsArgs $;

        public Builder() {
            $ = new UserRoleGrantsArgs();
        }

        public Builder(UserRoleGrantsArgs defaults) {
            $ = new UserRoleGrantsArgs(Objects.requireNonNull(defaults));
        }

        public Builder roles(Output<List<UserRoleGrantsRoleArgs>> roles) {
            $.roles = roles;
            return this;
        }

        public Builder roles(List<UserRoleGrantsRoleArgs> roles) {
            return roles(Output.of(roles));
        }

        public Builder roles(UserRoleGrantsRoleArgs... roles) {
            return roles(List.of(roles));
        }

        /**
         * @param userId ID of the user to grant these roles to.
         * 
         * @return builder
         * 
         */
        public Builder userId(Output<String> userId) {
            $.userId = userId;
            return this;
        }

        /**
         * @param userId ID of the user to grant these roles to.
         * 
         * @return builder
         * 
         */
        public Builder userId(String userId) {
            return userId(Output.of(userId));
        }

        public UserRoleGrantsArgs build() {
            $.roles = Objects.requireNonNull($.roles, "expected parameter 'roles' to be non-null");
            $.userId = Objects.requireNonNull($.userId, "expected parameter 'userId' to be non-null");
            return $;
        }
    }

}
