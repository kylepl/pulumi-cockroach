// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cockroach;

import com.pulumi.cockroach.LogExportConfigArgs;
import com.pulumi.cockroach.Utilities;
import com.pulumi.cockroach.inputs.LogExportConfigState;
import com.pulumi.cockroach.outputs.LogExportConfigGroup;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Log Export configuration for a cluster.
 * 
 */
@ResourceType(type="cockroach:index/logExportConfig:LogExportConfig")
public class LogExportConfig extends com.pulumi.resources.CustomResource {
    /**
     * Either the AWS Role ARN that identifies a role that the cluster account can assume to write to CloudWatch or the GCP
     * Project ID that the cluster service account has permissions to write to for cloud logging.
     * 
     */
    @Export(name="authPrincipal", type=String.class, parameters={})
    private Output<String> authPrincipal;

    /**
     * @return Either the AWS Role ARN that identifies a role that the cluster account can assume to write to CloudWatch or the GCP
     * Project ID that the cluster service account has permissions to write to for cloud logging.
     * 
     */
    public Output<String> authPrincipal() {
        return this.authPrincipal;
    }
    /**
     * Cluster ID.
     * 
     */
    @Export(name="clusterId", type=String.class, parameters={})
    private Output<String> clusterId;

    /**
     * @return Cluster ID.
     * 
     */
    public Output<String> clusterId() {
        return this.clusterId;
    }
    /**
     * Indicates when log export was initially configured.
     * 
     */
    @Export(name="createdAt", type=String.class, parameters={})
    private Output<String> createdAt;

    /**
     * @return Indicates when log export was initially configured.
     * 
     */
    public Output<String> createdAt() {
        return this.createdAt;
    }
    @Export(name="groups", type=List.class, parameters={LogExportConfigGroup.class})
    private Output</* @Nullable */ List<LogExportConfigGroup>> groups;

    public Output<Optional<List<LogExportConfigGroup>>> groups() {
        return Codegen.optional(this.groups);
    }
    /**
     * An identifier for the logs in the customer&#39;s log sink.
     * 
     */
    @Export(name="logName", type=String.class, parameters={})
    private Output<String> logName;

    /**
     * @return An identifier for the logs in the customer&#39;s log sink.
     * 
     */
    public Output<String> logName() {
        return this.logName;
    }
    /**
     * Controls what CRDB channels do not get exported.
     * 
     */
    @Export(name="omittedChannels", type=List.class, parameters={String.class})
    private Output</* @Nullable */ List<String>> omittedChannels;

    /**
     * @return Controls what CRDB channels do not get exported.
     * 
     */
    public Output<Optional<List<String>>> omittedChannels() {
        return Codegen.optional(this.omittedChannels);
    }
    /**
     * Controls whether logs are redacted before forwarding to customer sinks.
     * 
     */
    @Export(name="redact", type=Boolean.class, parameters={})
    private Output</* @Nullable */ Boolean> redact;

    /**
     * @return Controls whether logs are redacted before forwarding to customer sinks.
     * 
     */
    public Output<Optional<Boolean>> redact() {
        return Codegen.optional(this.redact);
    }
    /**
     * Controls whether all logs are sent to a specific region in the customer sink.
     * 
     */
    @Export(name="region", type=String.class, parameters={})
    private Output<String> region;

    /**
     * @return Controls whether all logs are sent to a specific region in the customer sink.
     * 
     */
    public Output<String> region() {
        return this.region;
    }
    /**
     * Encodes the possible states that a log export configuration can be in as it is created, deployed, and disabled.
     * 
     */
    @Export(name="status", type=String.class, parameters={})
    private Output<String> status;

    /**
     * @return Encodes the possible states that a log export configuration can be in as it is created, deployed, and disabled.
     * 
     */
    public Output<String> status() {
        return this.status;
    }
    /**
     * The cloud selection being exported to along with the cloud logging platform. Possible values are: * AWS_CLOUDWATCH *
     * GCP_CLOUD_LOGGING
     * 
     */
    @Export(name="type", type=String.class, parameters={})
    private Output<String> type;

    /**
     * @return The cloud selection being exported to along with the cloud logging platform. Possible values are: * AWS_CLOUDWATCH *
     * GCP_CLOUD_LOGGING
     * 
     */
    public Output<String> type() {
        return this.type;
    }
    /**
     * Indicates when the log export configuration was last updated.
     * 
     */
    @Export(name="updatedAt", type=String.class, parameters={})
    private Output<String> updatedAt;

    /**
     * @return Indicates when the log export configuration was last updated.
     * 
     */
    public Output<String> updatedAt() {
        return this.updatedAt;
    }
    /**
     * Elaborates on the log export status and hints at how to fix issues that may have occurred during asynchronous
     * operations.
     * 
     */
    @Export(name="userMessage", type=String.class, parameters={})
    private Output<String> userMessage;

    /**
     * @return Elaborates on the log export status and hints at how to fix issues that may have occurred during asynchronous
     * operations.
     * 
     */
    public Output<String> userMessage() {
        return this.userMessage;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public LogExportConfig(String name) {
        this(name, LogExportConfigArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public LogExportConfig(String name, LogExportConfigArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public LogExportConfig(String name, LogExportConfigArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("cockroach:index/logExportConfig:LogExportConfig", name, args == null ? LogExportConfigArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private LogExportConfig(String name, Output<String> id, @Nullable LogExportConfigState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("cockroach:index/logExportConfig:LogExportConfig", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static LogExportConfig get(String name, Output<String> id, @Nullable LogExportConfigState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new LogExportConfig(name, id, state, options);
    }
}
